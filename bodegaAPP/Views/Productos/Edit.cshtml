@model bodegaAPP.ProductosService.Producto
@{
    ViewBag.Title = "Edit";
}

<h2>@ViewData["Message"]</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Modifica datos del producto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(modelo => modelo.idproducto)

    <div class="form-group">
        @Html.LabelFor(model => model.idproducto, "Código de Producto", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idproducto, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idproducto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.imagen, "Imagen", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.imagen, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.imagen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.precio, "Precio", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.activo, "Activo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.activo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.activo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idcategoria, "ID Categoría", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idcategoria, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idcategoria, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.idbodega, "ID Bodega", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.idbodega, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.idbodega, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <!--<input type="submit" value="Grabar" class="btn btn-default" />-->
            <!--<input type="submit" value="Grabar" onclick="location.href='@Url.Action("Index", "Productos", new { id = Model.idbodega })'" />-->
            <input type="submit" value="Grabar" class="btn btn-default" />
            <button type="button"
                    onclick="@("window.location.href='" + @Url.Action("Index", "Productos", new {id = Model.idbodega}) +"'");" class="btn btn-danger">
                Volver
            </button>
        </div>
        </div>
    </div>
    }

    <div>
        <a href="../../Menu/Index">Retornar al inicio</a>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        }
